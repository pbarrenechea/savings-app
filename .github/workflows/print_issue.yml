name: Create Jira Issue

on:
  issues:
    types:
      - opened

jobs:
  send_webhook:
    runs-on: ubuntu-latest
    env:
      # Assignees
      ASSIGNEE_BUGS: ${{ secrets.ASSIGNEE_BUGS }}
      ASSIGNEE_STORIES: ${{ secrets.ASSIGNEE_STORIES }}

      # Custom Fields
      SPRINT_BUGS: ${{ secrets.SPRINT_BUGS }}
      SPRINT_QUESTIONS: ${{ secrets.SPRINT_QUESTIONS }}
      SPRINT_PRODUCT_INPUT: ${{ secrets.SPRINT_PRODUCT_INPUT }}
      SPRINT_DOCUMENTATION: ${{ secrets.SPRINT_DOCUMENTATION }}

      # Issue Types
      ISSUE_TYPE_BUG: ${{ secrets.ISSUE_TYPE_BUG }}
      ISSUE_TYPE_QUESTION: ${{ secrets.ISSUE_TYPE_QUESTION }}
      ISSUE_TYPE_FEEDBACK: ${{ secrets.ISSUE_TYPE_FEEDBACK }}
      ISSUE_TYPE_DOCUMENTATION: ${{ secrets.ISSUE_TYPE_DOCUMENTATION }}

    steps:
      - name: Determine Values & Send Webhook
        run: |
          ISSUE_TITLE="${{ github.event.issue.title }}"
          ISSUE_DESCRIPTION="${{ github.event.issue.body }}"

          LABELS="bug"

          ASSIGNEE="$ASSIGNEE_STORIES"
          CUSTOM_FIELD="$SPRINT_BUGS"
          ISSUE_TYPE="$ISSUE_TYPE_BUG"
          echo '${{ toJson(github.event.issue.labels[0].name) }}'
          echo "Before parsing labels"

          if [[ -z "$LABELS" || "$LABELS" == "[]" ]]; then
            echo "No labels found, using default values."
          else
            for row in $LABELS; do
              case "$row" in
                "bug")
                  ASSIGNEE="$ASSIGNEE_BUGS"
                  CUSTOM_FIELD="$SPRINT_BUGS"
                  ISSUE_TYPE="$ISSUE_TYPE_BUG"
                  ;;
                "documentation")
                  CUSTOM_FIELD="$SPRINT_QUESTIONS"
                  ISSUE_TYPE="$ISSUE_TYPE_QUESTION"
                  ;;
                "idea")
                  CUSTOM_FIELD="$SPRINT_PRODUCT_INPUT"
                  ISSUE_TYPE="$ISSUE_TYPE_FEEDBACK"
                  ;;
                "help")
                  CUSTOM_FIELD="$SPRINT_DOCUMENTATION"
                  ISSUE_TYPE="$ISSUE_TYPE_DOCUMENTATION"
                  ;;
              esac
            done
          fi

          echo "Final Issue Type: $ISSUE_TYPE"
          echo "Final Custom Field: $CUSTOM_FIELD"
          echo "Final Assignee: $ASSIGNEE"
          
          echo "Before JSON payload"

          JSON_PAYLOAD=$(jq -n \
            --arg summary "$ISSUE_TITLE" \
            --arg description "$ISSUE_DESCRIPTION" \
            --arg issuetype "$ISSUE_TYPE" \
            --arg assignee "$ASSIGNEE" \
            --arg customfield "$CUSTOM_FIELD" \
            '{
              summary: $summary,
              description: $description,
              issuetype: $issuetype,
              assignee: $assignee,
              fields: {
                team: "659396d5-5200-49f5-9508-29cbc1412b3d-45",
                customfield_10400: $customfield
              }
            }')

          echo "Payload: $JSON_PAYLOAD"
